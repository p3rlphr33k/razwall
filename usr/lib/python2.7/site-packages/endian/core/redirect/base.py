#!/usr/bin/env python  
# encoding: utf-8
#
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2005-2011 Endian                                           |
# |         Endian GmbH/Srl                                                  |
# |         Bergweg 41 Via Monte                                             |
# |         39057 Eppan/Appiano                                              |
# |         ITALIEN/ITALIA                                                   |
# |         info@endian.com                                                  |
# |                                                                          |
# | endian-core is free software: you can redistribute it and/or modify      |
# | it under the terms of GNU General Public License (GPL) version 2.0       |
# | when released with the Community edition                                 |
# | or the GNU Lesser General Public License (LGPL) version 2.1              |
# | when released with the Enterprise edition.                               |
# |                                                                          |
# | endian-core is distributed in the hope that it will be useful,           |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the             |
# | GNU General Public License for more details or the                       |
# | GNU Lesser General Public License for more details.                      |
# |                                                                          |
# | You should have received a copy of the license along with endian-core.   |
# | If not, see <http://www.gnu.org/licenses/>.                              |
# +--------------------------------------------------------------------------+
#

import os
from endian.data import DataSource

__all__ = ["redirect"]

def redirect():
    Redirector().redirect()

class Redirector(object):
    def __init__(self):
        env = os.environ
        httpd = DataSource("httpd").settings
        self.server = "%s:%s" % (
            env.get('SERVER_NAME'),
            httpd.get('HTTPD_GUI_PORT', '10443')
            )
        self.initstring =  "Status: 302 Moved\n"

    def _redir(self, url):
        if url.startswith('/'):
            url = url[1:]
        print "%sLocation: https://%s/%s\n\n" %(
            self.initstring,
            self.server,
            url)

    def redirect(self):
        product = DataSource("product").settings
        wizard = DataSource("wizard").settings

        # we have an initial wizard, do the state machinery
        if wizard.get("WIZARD_ENABLED", "off") == "on":
            step = wizard.get("WIZARD_STATE", "INIT")
            if step == '':
                step = "INIT"
                wizard["WIZARD_STATE"] = step
                wizard.write()
            uri = wizard.get("WIZARD_URI_%s" % step.upper())
            if uri:
                self._redir(uri)
                return

        # registration is forced
        if product.get("FORCE_REGISTRATION", "off") == "on":
            self._redir("/cgi-bin/setup/step3/regwiz.cgi")
            return

        # update is in progress -> show update page
        if os.path.exists("/var/cache/en/update_info" ):
            self._redir("/cgi-bin/updates.cgi")
            return

        self._redir("/manage/dashboard")
