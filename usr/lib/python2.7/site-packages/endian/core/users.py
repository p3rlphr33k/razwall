#!/usr/bin/env python
# encoding: utf-8
#
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2005-2013 Endian                                           |
# |         Endian GmbH/Srl                                                  |
# |         Bergweg 41 Via Monte                                             |
# |         39057 Eppan/Appiano                                              |
# |         ITALIEN/ITALIA                                                   |
# |         info@endian.com                                                  |
# |                                                                          |
# | endian-core is free software: you can redistribute it and/or modify      |
# | it under the terms of GNU General Public License (GPL) version 2.0       |
# | when released with the Community edition                                 |
# | or the GNU Lesser General Public License (LGPL) version 2.1              |
# | when released with the Enterprise edition.                               |
# |                                                                          |
# | endian-core is distributed in the hope that it will be useful,           |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the             |
# | GNU General Public License for more details or the                       |
# | GNU Lesser General Public License for more details.                      |
# |                                                                          |
# | You should have received a copy of the license along with endian-core.   |
# | If not, see <http://www.gnu.org/licenses/>.                              |
# +--------------------------------------------------------------------------+


import subprocess
from endian.core.version import is_community
from endian.job.commons import send_cmd_to_engine


def _runCmd(cmd):
    """Execute a command returing its standard output and exit code."""
    try:
        p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        output = p.communicate()[0]
        return {'output': output, 'return code': p.returncode}
    except:
        return {'output': '', 'return code': -1}


def countArpEntries():
    """Count the number of arp entries."""
    out = _runCmd(['arp', '-n'])
    if out['return code'] == 0:
        count = out['output'].count('\n') -1
    else:
        count = 0
    return count


def countHotspotUsers():
    """Count the number of hotspot users."""
    if is_community():
        return 0
    out = _runCmd(['chilli_query', 'list'])
    if out['return code'] != 0:
        return 0
    count = 0
    for line in out['output'].split('\n'):
        sline = line.split()
        if len(sline) < 5:
            continue
        if sline[4] == '1':
            count += 1
    return count


def countVpnUsers():
    """Count the number of VPN users."""
    out = _runCmd(['openvpn-user', 'status'])
    if out['return code'] != 0:
        return 0
    count = 0
    for line in out['output'].split('\n'):
        if line.startswith('CLIENT_LIST'):
            count += 1
    return count


def countIpsecUsers():
    """Count the number of IPsec users."""
    try:
        return len([x[4:] for x in send_cmd_to_engine("call ipsec.connections").split('\n')
                    if x[0] == '2'])
    except:
        return 0


def collectUsersData():
    """Collect information about the users on this system."""
    data = {}
    data['arpentries'] = countArpEntries()
    data['hotspotusers'] = countHotspotUsers()
    data['vpnusers'] = countVpnUsers()
    data['ipsecusers'] = countIpsecUsers()
    return data


if __name__ == '__main__':
    print collectUsersData()

