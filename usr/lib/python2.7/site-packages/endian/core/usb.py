#!/usr/bin/env python
# encoding: utf-8
#
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2005-2011 Endian                                           |
# |         Endian GmbH/Srl                                                  |
# |         Bergweg 41 Via Monte                                             |
# |         39057 Eppan/Appiano                                              |
# |         ITALIEN/ITALIA                                                   |
# |         info@endian.com                                                  |
# |                                                                          |
# | endian-core is free software: you can redistribute it and/or modify      |
# | it under the terms of GNU General Public License (GPL) version 2.0       |
# | when released with the Community edition                                 |
# | or the GNU Lesser General Public License (LGPL) version 2.1              |
# | when released with the Enterprise edition.                               |
# |                                                                          |
# | endian-core is distributed in the hope that it will be useful,           |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the             |
# | GNU General Public License for more details or the                       |
# | GNU Lesser General Public License for more details.                      |
# |                                                                          |
# | You should have received a copy of the license along with endian-core.   |
# | If not, see <http://www.gnu.org/licenses/>.                              |
# +--------------------------------------------------------------------------+
#

import subprocess

def getDrivers(u_vendor,u_product):
    call_list = ['/sbin/kudzu','-qpsb','usb']
    output = subprocess.Popen(call_list,stdout=subprocess.PIPE).communicate()[0]
    output = output.split("\n")
    output = map(lambda x: x.strip(), output)

    vendor = '0000'
    product = '0000'
    driver = None
    modules = []
    drivers = []
    i = 1
    for line in output:
        if line == '-' or i == len(output):
            if (vendor != '0000' and
                product != '0000' and
                driver != None):
                modules.append({'vendor':vendor,
                                'product':product,
                                'driver':driver})
                if u_vendor == vendor and u_product == product:
                    drivers.append(driver)
            vendor = '0000'
            product = '0000'
            driver = None
        elif line.startswith('driver:'):
            driver = line.split(':')[1].strip()
        elif line.startswith('vendorId:'):
            vendor = line.split(':')[1].strip()
        elif line.startswith('deviceId:'):
            product = line.split(':')[1].strip()
        i += 1
    drivers = list(set(drivers))
    return drivers

def unloadDrivers(u_vendor, u_product):
    drivers = getDrivers(u_vendor, u_product)
    ret = 0
    for driver in drivers:
        call_list = ['/sbin/modprobe','-r',driver]
        c = subprocess.Popen(call_list,stdout=subprocess.PIPE,
                                       stderr=subprocess.PIPE)
        c.communicate()
        ret = c.returncode
    return ret
