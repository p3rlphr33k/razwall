#!/usr/bin/env python  
# encoding: utf-8
#
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2005-2011 Endian                                           |
# |         Endian GmbH/Srl                                                  |
# |         Bergweg 41 Via Monte                                             |
# |         39057 Eppan/Appiano                                              |
# |         ITALIEN/ITALIA                                                   |
# |         info@endian.com                                                  |
# |                                                                          |
# | endian-core is free software: you can redistribute it and/or modify      |
# | it under the terms of GNU General Public License (GPL) version 2.0       |
# | when released with the Community edition                                 |
# | or the GNU Lesser General Public License (LGPL) version 2.1              |
# | when released with the Enterprise edition.                               |
# |                                                                          |
# | endian-core is distributed in the hope that it will be useful,           |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the             |
# | GNU General Public License for more details or the                       |
# | GNU Lesser General Public License for more details.                      |
# |                                                                          |
# | You should have received a copy of the license along with endian-core.   |
# | If not, see <http://www.gnu.org/licenses/>.                              |
# +--------------------------------------------------------------------------+
#

__author__ = "Peter Warasin <peter@endian.com>"
__date__ = "2008-01-26"
"""
defines generic software patterns
"""

import threading
class Observer(object):
    def __init__(self):
        self.data = []
        self.updates = 0
    def update(self):
        for i in self.data:
            i()
        self.updates += 1
    def register(self, method):
        self.data.append(method)
    def __repr__(self):
        return "Observer: %s, Called: %s" % (self.data, self.updates)

class ThreadableObserver(Observer):
    def __init__(self):
        Observer.__init__(self)
        self.lock = threading.Lock()
    def update(self):
        self.lock.acquire()
        try:
            Observer.update(self)
        finally:
            self.lock.release()
    def register(self, method):
        self.lock.acquire()
        Observer.register(self, method)
        self.lock.release()
