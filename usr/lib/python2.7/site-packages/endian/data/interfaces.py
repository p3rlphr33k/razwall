#!/usr/bin/env python
# -*- coding: utf-8 -*-
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2004-2016 S.p.A. <info@endian.com>                         |
# |         Endian S.p.A.                                                    |
# |         via Pillhof 47                                                   |
# |         39057 Appiano (BZ)                                               |
# |         Italy                                                            |
# |                                                                          |
# | This program is free software; you can redistribute it and/or modify     |
# | it under the terms of the GNU General Public License as published by     |
# | the Free Software Foundation; either version 2 of the License, or        |
# | (at your option) any later version.                                      |
# |                                                                          |
# | This program is distributed in the hope that it will be useful,          |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            |
# | GNU General Public License for more details.                             |
# |                                                                          |
# | You should have received a copy of the GNU General Public License along  |
# | with this program; if not, write to the Free Software Foundation, Inc.,  |
# | 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.              |
# +--------------------------------------------------------------------------+

__author__ = "Peter Warasin <peter@endian.com>"
__date__ = "2008-01-26"
"""
defines standard node interfaces
"""

from endian.core.pattern import Observer

class ContainerInterface(object):
    def __init__(self, filename):
        self.filename = filename
        self._onRead = Observer()
        self._onWrite = Observer()
    def read(self):
        self._onRead.update()
    def write(self, filename=None):
        self._onWrite.update()
    def registerOnRead(self, method):
        self._onRead.register(method)
    def registerOnWrite(self, method):
        self._onWrite.register(method)

class ExpireableFile(object):
    def __init__(self, filename):
        self.filename = filename

class ExpireablePaths(object):
    def __init__(self, paths):
        self.paths = paths
