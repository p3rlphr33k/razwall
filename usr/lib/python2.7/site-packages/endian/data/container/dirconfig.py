#!/usr/bin/env python
# -*- coding: utf-8 -*-
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2004-2016 S.p.A. <info@endian.com>                         |
# |         Endian S.p.A.                                                    |
# |         via Pillhof 47                                                   |
# |         39057 Appiano (BZ)                                               |
# |         Italy                                                            |
# |                                                                          |
# | This program is free software; you can redistribute it and/or modify     |
# | it under the terms of the GNU General Public License as published by     |
# | the Free Software Foundation; either version 2 of the License, or        |
# | (at your option) any later version.                                      |
# |                                                                          |
# | This program is distributed in the hope that it will be useful,          |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            |
# | GNU General Public License for more details.                             |
# |                                                                          |
# | You should have received a copy of the GNU General Public License along  |
# | with this program; if not, write to the Free Software Foundation, Inc.,  |
# | 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.              |
# +--------------------------------------------------------------------------+

__author__ = "Peter Warasin <peter@endian.com>"
__date__ = "2008-02-11"
"""
directory container for Endian datasource
"""
from endian.core.cache import Expirer
from endian.core.cache import fsExpirer
from endian.data.interfaces import ContainerInterface
from endian.data.interfaces import ExpireablePaths
from endian.datatypes.config_dict import ConfigDict
import os

class DirectoryError(Exception):
    pass

class Directory(ConfigDict,
                ContainerInterface,
                ExpireablePaths):
    def __init__(self, path, searchPath):
        ConfigDict.__init__(self)
        paths = map(lambda x: os.path.join(x, path), searchPath)
        mypath = os.path.join(searchPath[0], path)
        ContainerInterface.__init__(self, mypath)
        ExpireablePaths.__init__(self, paths)
        self.read()

    def read(self):
        for dir in self.paths:
            if not os.path.exists(dir):
                continue
            if not os.path.isdir(dir):
                raise DirectoryError("'%s' is not a directory"%dir)
            list = []
            try:
                list = os.listdir(dir)
            except OSError, e:
                raise DirectoryError("Could not open directory '%s' (%s)"%(dir, e))
            for item in list:
                if item in self:
                    continue
                if item.startswith('.'):
                    continue
                self[item] = os.path.join(dir, item)
        ContainerInterface.read(self)

    def write(self, filename=None):
        if filename is None:
            filename = self.filename
        os.mkdir(filename)
        ContainerInterface.write(self, filename)


def pathsExpirer(obj):
    cache = obj.get()
    for item in cache.paths:
        if fsExpirer(item, cache.timestamp):
            return True
    return False
Expirer.register(ExpireablePaths, pathsExpirer)
