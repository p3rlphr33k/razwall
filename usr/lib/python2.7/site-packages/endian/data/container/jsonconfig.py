#!/usr/bin/env python
# -*- coding: utf-8 -*-
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2004-2016 S.p.A. <info@endian.com>                         |
# |         Endian S.p.A.                                                    |
# |         via Pillhof 47                                                   |
# |         39057 Appiano (BZ)                                               |
# |         Italy                                                            |
# |                                                                          |
# | This program is free software; you can redistribute it and/or modify     |
# | it under the terms of the GNU General Public License as published by     |
# | the Free Software Foundation; either version 2 of the License, or        |
# | (at your option) any later version.                                      |
# |                                                                          |
# | This program is distributed in the hope that it will be useful,          |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            |
# | GNU General Public License for more details.                             |
# |                                                                          |
# | You should have received a copy of the GNU General Public License along  |
# | with this program; if not, write to the Free Software Foundation, Inc.,  |
# | 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.              |
# +--------------------------------------------------------------------------+

__author__ = "Peter Warasin <peter@endian.com>"
__date__ = "2008-01-02"
"""
JSON container for Endian datasource
"""

from endian.datatypes.extended_json import ConfigJSONEncoder, JSONConfigDict
from endian.data.container.abstractconfig import InvalidSettingsFile
from endian.data.container.abstractconfig import ConfigFileParseError
from endian.data.container.abstractconfig import AbstractConfigFile
from endian.core.filetools import openLocking as open
import simplejson

__all__ = [
    'JsonFileException',
    'JsonConfigFile',
    'InvalidSettingsFile',
    'ConfigFileParseError',
    'AbstractConfigFile',
    'JSONConfigDict',
    'ConfigJSONEncoder'
]

class JsonFileException(ConfigFileParseError):
    pass

class JsonConfigFile(AbstractConfigFile, object):
    def __init__(self, filename=None,
                 obj=None, configfiles=[],
                 settingsDefault=None):
        AbstractConfigFile.__init__(self, configfiles,
                                    filename, settingsDefault, obj)
    def _parse(self, obj, data=None):
        if data is None:
            data = self.data
        fulldata = map(lambda x: x, obj)
        if len(fulldata) > 0:
            try:
                data.extend(
                    simplejson.loads("".join(fulldata),
                                     object_hook=JSONConfigDict)
                    )
            except ValueError, e:
                raise JsonFileException(e)
    def write(self, filename=None):
        if not filename:
            filename = self.filename
        data = simplejson.dumps(self.data,
                                cls=ConfigJSONEncoder,
                                sort_keys=True,
                                indent=4)
        f = None
        try:
            f = open(filename, "w")
            f.write(data)
        finally:
            if f is not None:
                f.close()
        AbstractConfigFile.write(self, filename)
