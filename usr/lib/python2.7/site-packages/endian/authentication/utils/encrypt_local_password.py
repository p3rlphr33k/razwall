#!/usr/bin/env python
# -*- coding: utf-8 -*-
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2004-2016 S.p.A. <info@endian.com>                         |
# |         Endian S.p.A.                                                    |
# |         via Pillhof 47                                                   |
# |         39057 Appiano (BZ)                                               |
# |         Italy                                                            |
# |                                                                          |
# | This program is free software; you can redistribute it and/or modify     |
# | it under the terms of the GNU General Public License as published by     |
# | the Free Software Foundation; either version 2 of the License, or        |
# | (at your option) any later version.                                      |
# |                                                                          |
# | This program is distributed in the hope that it will be useful,          |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            |
# | GNU General Public License for more details.                             |
# |                                                                          |
# | You should have received a copy of the GNU General Public License along  |
# | with this program; if not, write to the Free Software Foundation, Inc.,  |
# | 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.              |
# +--------------------------------------------------------------------------+

import sys
import yaml
try:
    from yaml import CLoader as Loader, CSafeDumper as SafeDumper
except ImportError:
    from yaml import Loader, SafeDumper
from endian.core.sha512crypt import sha512crypt

def main(input_file, output_file):
    """
        Convert all the users plain text passwords from the input file
        into SHA-512 crypt passwords and save the result on the output file
    """
    try:
        file_content = None
        f = open(input_file, 'r')
        try:
            file_content = f.read()
        finally:
            f.close()
    except Exception, ex:
        print "Could not load users file: %s" % (str(ex))
        return False

    users = yaml.load(file_content, Loader=Loader) or {}
    if not isinstance(users, dict):
        print "Could not load users file: found a %s insted of a dictionary" % (type(users).__name__)
        return False
    print "%d accounts loaded" % len(users)

    i = 0
    for name, user in users.iteritems():
        password_type = user.get('password_type', None) or 'plain'
        if password_type == 'plain':
            password = sha512crypt(user.get('password'))
            user['password'] = password
            user['password_type'] = 'sha512crypt'
            i = i + 1
    print "%d passwords updated" % i

    file_content = yaml.dump(users, Dumper=SafeDumper)

    try:
        f = open(output_file, 'w')
        try:
            f.write(file_content)
        finally:
            f.close()
        return True
    except Exception, ex:
        print "Error saving users file: %s" % (str(ex))
        return False

    return True

if __name__ == '__main__':
    if len(sys.argv) != 3:
        print "Convert all the users plain text passwords from the input file"
        print "into SHA-512 crypt passwords and save the result on the output file"
        print "usage: %s <input yaml users file> <output yaml users file>" % sys.argv[0]
        sys.exit(2)
    if not main(input_file=sys.argv[1], output_file=sys.argv[2]):
        sys.exit(1)
