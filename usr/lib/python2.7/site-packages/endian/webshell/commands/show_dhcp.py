#!/usr/bin/python
#
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2016 S.p.A. <info@endian.com>                              |
# |         Endian S.p.A.                                                    |
# |         via Pillhof 47                                                   |
# |         39057 Appiano (BZ)                                               |
# |         Italy                                                            |
# |                                                                          |
# | This program is free software; you can redistribute it and/or modify     |
# | it under the terms of the GNU General Public License as published by     |
# | the Free Software Foundation; either version 2 of the License, or        |
# | (at your option) any later version.                                      |
# |                                                                          |
# | This program is distributed in the hope that it will be useful,          |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            |
# | GNU General Public License for more details.                             |
# |                                                                          |
# | You should have received a copy of the GNU General Public License along  |
# | with this program; if not, write to the Free Software Foundation, Inc.,  |
# | 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.              |
# +--------------------------------------------------------------------------+

from endian.webshell.commons import context_aware


@context_aware
def show_dhcp(cmd, *args, **argv):
    """
    Print DHCP leases.\n
    Displays the DHCP leases information.

    Format:

    show dhcp

    """
    import re
    import time
    from endian.data import DataSource
    context = argv['context']

    DHCP_LEASES = "/var/lib/dhcp/dhcpd.leases"

    lease_re = re.compile(r"lease\s+(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s+")
    state_re = re.compile(r"\s*binding state\s+(.*);")
    mac_re = re.compile(r"\s*hardware ethernet\s+(.*);")
    hostname_re = re.compile(r"\s*client-hostname\s+\"(.*)\";")
    expire_re = re.compile(r"\s*ends\s+[0-9]\s+(.*);")

    # Load the dynamic leases
    leases = {}
    last = None
    try:
        for line in open(DHCP_LEASES).readlines():
            match = lease_re.match(line)
            if match:
                last = {}
                ip = match.group(1)
                last['ip'] = ip
                leases[ip] = last
                continue
            if not last:
                continue
            match = state_re.match(line)
            if match:
                last['state'] = match.group(1)
                continue
            match = mac_re.match(line)
            if match:
                last['mac'] = match.group(1)
                continue
            match = hostname_re.match(line)
            if match:
                last['hostname'] = match.group(1)
                continue
            match = expire_re.match(line)
            if match:
                try:
                    t = time.strptime(match.group(1), "%Y/%m/%d %H:%M:%S")[0:6]
                    last['expire_human'] = "%04d-%02d-%02d %02d:%02d:%02d" % t
                except:
                    pass
                continue
    except:
        pass

    # Load the static leases
    try:
        ds = context.datasource
    except AttributeError:
        ds = DataSource()
        setattr(context, 'datasource', ds)
    try:
        for line in ds.dhcp.fixleases:
            try:
                if line.startswith("#"):
                    continue
                line = line.split(",")
                if line[2] != "on":
                    continue
                lease = { 'mac': line[0], 'ip': line[1], 'hostname': line[6], 'state': "fixed"}
                if line[1] in leases:
                    lease['expire_human'] = leases[line[1]]['expire_human']
                leases[line[1]] = lease
            except:
                pass
    except:
        pass

    context.write("${ANSI_GREEN}DHCP leases of $HOSTNAME at $TIME on $DATE$ANSI_RESET")
    context.write("${ANSI_GREEN}IP Address       MAC Address         State   Leases Expires      Hostname$ANSI_RESET")
    for lease in sorted(leases.values(), cmp=lambda x,y: cmp(x['ip'], y['ip'])):
        context.write("%-16s %-18s  %-6s  %19s %s" % (lease["ip"],
                                     lease.get("mac") or "",
                                     lease.get("state") or "",
                                     lease.get("expire_human") or "",
                                     lease.get("hostname") or "",))
