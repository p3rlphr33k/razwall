#!/usr/bin/env python
# -*- coding: utf-8 -*-
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2004-2016 S.p.A. <info@endian.com>                         |
# |         Endian S.p.A.                                                    |
# |         via Pillhof 47                                                   |
# |         39057 Appiano (BZ)                                               |
# |         Italy                                                            |
# |                                                                          |
# | This program is free software; you can redistribute it and/or modify     |
# | it under the terms of the GNU General Public License as published by     |
# | the Free Software Foundation; either version 2 of the License, or        |
# | (at your option) any later version.                                      |
# |                                                                          |
# | This program is distributed in the hope that it will be useful,          |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            |
# | GNU General Public License for more details.                             |
# |                                                                          |
# | You should have received a copy of the GNU General Public License along  |
# | with this program; if not, write to the Free Software Foundation, Inc.,  |
# | 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.              |
# +--------------------------------------------------------------------------+

import os
import glob
import grp
import pwd
import datetime
from endian.job.engine_control import send_cmd_to_engine
from endian.core.i18n import _

__all__ = [
    'DEMO_TEXT',
    'is_demo',
    'chown',
    'chgrp',
    'parse_asn1time',
    'emit_crl_changed',
    'generate_filename',
    'OPENSSL_BIN',
    'DEFAULT_DIGEST',
]

# OpenSSL command name
OPENSSL_BIN = "openssl"

# Default digest algorithm
DEFAULT_DIGEST = 'sha256'

# show this text on actions not allowed on demo machines
DEMO_TEXT = _("Creating, uploading, revoking and deleting CA certificates and certificates is not allowed.")

def is_demo():
    from endian.data import DataSource
    if DataSource('demo').settings.get('demo_enabled', "off") == 'on':
        return True
    return False

def chown(glob_expression, username):
    uid = pwd.getpwnam(username).pw_uid
    for file in glob.glob(glob_expression):
        os.chown(file, uid, -1)

def chgrp(glob_expression, group):
    """
        Change glob owner
    """
    gid = grp.getgrnam(group).gr_gid
    for file in glob.glob(glob_expression):
        os.chown(file, -1, gid)

def parse_asn1time(asn1time):
    """
        Convert an ASN1 formatted time into a datetime
    """
    try:
        year = int(asn1time[:4])
        month = int(asn1time[4:6])
        day = int(asn1time[6:8])
        hour = int(asn1time[8:10])
        min = int(asn1time[10:12])
        return datetime.datetime(year, month, day, hour, min)
    except:
        return None

def emit_crl_changed():
    """
        Emit a "crl_changed" event (force CRLs reloading)
    """
    send_cmd_to_engine("emit event(msg:crl_changed)")

def generate_filename(cert_name):
    """
        Generate the file name starting from the certificate common name
        (basically change *.example.com into _.example.com, and replace / with _)
    """
    if not cert_name:
        return cert_name
    cert_name = cert_name.replace('/', '_')
    if cert_name.startswith('*.'):
        cert_name = '_.' + cert_name[2:]
    return cert_name
