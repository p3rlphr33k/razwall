#!/usr/bin/python
#
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2016 S.p.A. <info@endian.com>                              |
# |         Endian S.p.A.                                                    |
# |         via Pillhof 47                                                   |
# |         39057 Appiano (BZ)                                               |
# |         Italy                                                            |
# |                                                                          |
# | This program is free software; you can redistribute it and/or modify     |
# | it under the terms of the GNU General Public License as published by     |
# | the Free Software Foundation; either version 2 of the License, or        |
# | (at your option) any later version.                                      |
# |                                                                          |
# | This program is distributed in the hope that it will be useful,          |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            |
# | GNU General Public License for more details.                             |
# |                                                                          |
# | You should have received a copy of the GNU General Public License along  |
# | with this program; if not, write to the Free Software Foundation, Inc.,  |
# | 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.              |
# +--------------------------------------------------------------------------+

from endian.core.i18n import _
from endian.emi import widgets, fieldset
from endian.validators.core import Invalid
from endian.validators.form import FormValidator
from endian.dhcp.schema.fixed import FixedLease

__all__ = [
    "FixedLeasesEditor",
    "FixedLeasesGrid",
]

class UniqueMacAddressValidator(FormValidator):
    def _(s): return s

    storage = None

    messages = {
        'unique': _("MAC address already in use"),
    }

    def _to_python(self, value_dict, state):
        if self.storage is None:
            self.storage = FixedLease.storage()
        try:
            id = value_dict.get("ID")
        except:
            id = None
        value = value_dict.get('mac_address')
        for item in self.storage.select(mac_address=value):
            if str(item.get("ID")) != str(id):
                error_dict = {
                    'mac_address': self.message('unique', state)
                }
                raise Invalid("", value_dict, state, error_dict=error_dict)
        return value_dict


class FixedLeasesEditor(widgets.GridEditor):
    title = _("Add a fixed lease")
    edit_title = _("Change fixed lease")
    columns = 2

    entity = FixedLease

    chained_validators = [
        UniqueMacAddressValidator(),
    ]


    children = fieldset.FieldsGroup(
        fields=FixedLease.fields(fields=[
            "mac_address",
            "address",
            "remark",
            fieldset.FieldsGroup(
                id="advanced_settings_accordion",
                accordion=True,
                accordion_collapses=True,
                columns=1,
                fields=[
                    fieldset.FieldsGroup(
                        id="advanced_settings_options",
                        title=_("Advanced options"),
                        columns=2,
                        fields=FixedLease.fields(fields=[
                            "next_address",
                            "filename",
                            "root_path",
                        ])
                    )
                ]
            ),
            "enabled",
            "ID"
        ])
    )


class FixedLeasesGrid(widgets.KendoGrid):
    entity = FixedLease

    new_label = _("Add a fixed leases")

    sortable = True
    selectable = False

    columns = [
        widgets.Column(name="mac_address", title=_("MAC address"), empty_value=' '),
        widgets.Column(name="address", title=_("IP address"), empty_value=' '),
        # widgets.Column(name="next_address", title=_("Next address"), empty_value=' '),
        # widgets.Column(name="filename", title=_("Filename"), empty_value=' '),
        # widgets.Column(name="root_path", title=_("Root path"), empty_value=' '),
        widgets.Column(name="remark", title=_("Remark"), empty_value=' '),
        widgets.ActionsColumn(["enable", "edit", "delete"])
    ]

