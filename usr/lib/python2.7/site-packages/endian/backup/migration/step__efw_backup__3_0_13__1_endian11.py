#!/usr/bin/env python
#
#        +-----------------------------------------------------------------------------+
#        | Endian Firewall                                                             |
#        +-----------------------------------------------------------------------------+
#        | Copyright (c) 2005-2014 Endian                                              |
#        |         Endian GmbH/Srl                                                     |
#        |         Bergweg 41 Via Monte                                                |
#        |         39057 Eppan/Appiano                                                 |
#        |         ITALIEN/ITALIA                                                      |
#        |         info@endian.it                                                      |
#        |                                                                             |
#        | This program is free software; you can redistribute it and/or               |
#        | modify it under the terms of the GNU General Public License                 |
#        | as published by the Free Software Foundation; either version 2              |
#        | of the License, or (at your option) any later version.                      |
#        |                                                                             |
#        | This program is distributed in the hope that it will be useful,             |
#        | but WITHOUT ANY WARRANTY; without even the implied warranty of              |
#        | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               |
#        | GNU General Public License for more details.                                |
#        |                                                                             |
#        | You should have received a copy of the GNU General Public License           |
#        | along with this program; if not, write to the Free Software                 |
#        | Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA. |
#        | http://www.fsf.org/                                                         |
#        +-----------------------------------------------------------------------------+
#

import glob
import os
import tarfile
from endian.core import logger
from endian.data import DataSource
from endian.migration.migration import mainHandler
from endian.job.commons import *

def relink(backupfile):
    linkedfile = os.readlink(backupfile)
    if not os.path.exists(linkedfile):
        logger.info("remove broken link %s" % backupfile)
        os.unlink(backupfile)
        return

    new_linked_filename = linkedfile.replace(".tar.gz", "-hwdata.tar.gz")
    new_backupfile = backupfile.replace(".tar.gz", "-hwdata.tar.gz")

    os.rename(linkedfile, new_linked_filename)
    logger.info("symlink %s with %s" % (new_linked_filename, new_backupfile))
    os.symlink(new_linked_filename, new_backupfile)
    os.unlink(backupfile)
    try:
        chown(new_backupfile, "nobody")
        chgrp(new_backupfile, "nobody")
    except:
        logger.info("Can't change ownership on %s" % new_backupfile)
    return

def process_backup_file(backupfile):
    if os.path.islink(backupfile):
        relink(backupfile)
    else:
        new_backupfile = backupfile.replace(".tar.gz", "-hwdata.tar.gz")
        logger.info("mv %s to %s" % (backupfile, new_backupfile))
        os.rename(backupfile, new_backupfile)

def rename_backups():
    backups = glob.glob("/var/backups/backup-*.tar.gz")
    for backupfile in backups:
        if "hwdata" in backupfile:
            continue
        tar = tarfile.open(backupfile)
        for x in tar.getnames():
            if "etc/businfotab" in x:
                tar.close()
                break
        else:
            tar.close()
            continue

        logger.info("backup file %s contains hwdata and needs to be renamed" % backupfile)
        process_backup_file(backupfile)
        if os.path.exists(backupfile + ".meta"):
            process_backup_file(backupfile + ".meta")

def main():
    try:
        rename_backups()
    except:
        logger.error("error migrating backup files", exc_info=True)

if __name__ == '__main__':
    mainHandler(main)

