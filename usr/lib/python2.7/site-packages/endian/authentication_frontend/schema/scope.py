#!/usr/bin/env python
# -*- coding: utf-8 -*-
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2004-2016 S.p.A. <info@endian.com>                         |
# |         Endian S.p.A.                                                    |
# |         via Pillhof 47                                                   |
# |         39057 Appiano (BZ)                                               |
# |         Italy                                                            |
# |                                                                          |
# | This program is free software; you can redistribute it and/or modify     |
# | it under the terms of the GNU General Public License as published by     |
# | the Free Software Foundation; either version 2 of the License, or        |
# | (at your option) any later version.                                      |
# |                                                                          |
# | This program is distributed in the hope that it will be useful,          |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            |
# | GNU General Public License for more details.                             |
# |                                                                          |
# | You should have received a copy of the GNU General Public License along  |
# | with this program; if not, write to the Free Software Foundation, Inc.,  |
# | 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.              |
# +--------------------------------------------------------------------------+

from endian.core.i18n import _
from endian.core.lazylist import CachedList
from endian.emi import entities

__all__ = [
    'scope_title',
    'ScopeName',
    'Scope'
]

def scope_title(name):
    if not name:
        return ""
    from endian.authentication.auth_client import get_scope_title
    try:
        return get_scope_title(name)
    except:
        return name

def scope_names():
    from endian.authentication.auth_client import get_scope_names
    return [{'ID': x, 'name': scope_title(x)} for x in get_scope_names()]

class ScopeName(entities.Entity):
    entities.using_options(type='dynamic')

    id = entities.Field(entities.Unicode, primary_key=True, nullable=False)
    values = CachedList(scope_names)

class Scope(entities.Entity):
    entities.using_options(namespace='access.scope', type='yaml', register_datasource=False)

    ID = entities.Field(entities.Integer, primary_key=True, hidden=True, autoincrement=True)
    name = entities.Field(entities.Unicode, label_text=_("Service"),
        read_only=True,
        read_only_post=True,
        format_function=scope_title,
        expands=True)
    providers = entities.ManyToMany(
        label_text=_("Selected authentication backends"),
        multiselect_title=_("Authentication backends"),
        multiselect_sortable=True,
        target="authentication_frontend:Provider",
        target_key="name", target_label="name",
        target_filter_key="can_get_user",
        target_filter_value="True",
        expands=True)

    @property
    def label(self):
        return scope_title(self.name)

    @classmethod
    def all(cls):
        return cls.storage().load()

    @classmethod
    def get_by_name(cls, name):
        for scope in cls.all():
            if scope['name'] == name:
                return scope
        return None
