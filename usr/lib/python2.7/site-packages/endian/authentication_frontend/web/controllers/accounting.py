#!/usr/bin/env python
# -*- coding: utf-8 -*-
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2004-2016 S.p.A. <info@endian.com>                         |
# |         Endian S.p.A.                                                    |
# |         via Pillhof 47                                                   |
# |         39057 Appiano (BZ)                                               |
# |         Italy                                                            |
# |                                                                          |
# | This program is free software; you can redistribute it and/or modify     |
# | it under the terms of the GNU General Public License as published by     |
# | the Free Software Foundation; either version 2 of the License, or        |
# | (at your option) any later version.                                      |
# |                                                                          |
# | This program is distributed in the hope that it will be useful,          |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            |
# | GNU General Public License for more details.                             |
# |                                                                          |
# | You should have received a copy of the GNU General Public License along  |
# | with this program; if not, write to the Free Software Foundation, Inc.,  |
# | 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.              |
# +--------------------------------------------------------------------------+

from endian.core.i18n import _
from endian.core import logger
from endian.emi import controllers
from endian.job.engine_control import send_cmd_to_engine

from endian.authentication_frontend.schema.scope import scope_title
from endian.authentication_frontend.web.widgets.accounting import OpenSessionGrid

__all__ = [
    "OpenSessionController",
    "AllOpenSessionController"
]

class OpenSessionController(controllers.GridController):
    """
        Custom controller for user
        This controller encryptes the password with sha512 on store
    """
    editorWidget = None # do not overwrite me
    gridWidget = None # overwrite me

    only_scope = None # overwrite me

    def getData(self, args, data_options={}):
        data = super(OpenSessionController, self).getData(args, data_options)
        if not self.only_scope:
            return data
        rdata = []
        for d in data:
            # Check with scope object.
            if self.only_scope and d.get('scope') not in self.only_scope:
                continue
            rdata.append(d)
        return rdata

    def _disconnect(self, name=None, scope=None, session_id=None, **args):
        try:
            if scope == "openvpn":
                send_cmd_to_engine("call openvpnjob.kill_client",
                    options={'common_name': session_id})
            elif scope == "ipsec-xauth":
                send_cmd_to_engine("call ipsec.reset_connection",
                    options={'name': session_id})
            else:
                return {"error" : _("Disconnecting '%s' from %s is not possible.") % (name, scope_title(scope))}
            return {"info" : _("'%s' disconnected from %s.") % (name, scope_title(scope))}
        except Exception, ex:
            logger.error(ex, exc_info=True)
            return {"error" : _("Disconnecting '%s' from %s failed.") % (name, scope_title(scope))}

class AllOpenSessionController(OpenSessionController):
    gridWidget = OpenSessionGrid
