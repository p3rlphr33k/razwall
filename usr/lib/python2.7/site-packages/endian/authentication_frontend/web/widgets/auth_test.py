#!/usr/bin/env python
# -*- coding: utf-8 -*-
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2004-2016 S.p.A. <info@endian.com>                         |
# |         Endian S.p.A.                                                    |
# |         via Pillhof 47                                                   |
# |         39057 Appiano (BZ)                                               |
# |         Italy                                                            |
# |                                                                          |
# | This program is free software; you can redistribute it and/or modify     |
# | it under the terms of the GNU General Public License as published by     |
# | the Free Software Foundation; either version 2 of the License, or        |
# | (at your option) any later version.                                      |
# |                                                                          |
# | This program is distributed in the hope that it will be useful,          |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            |
# | GNU General Public License for more details.                             |
# |                                                                          |
# | You should have received a copy of the GNU General Public License along  |
# | with this program; if not, write to the Free Software Foundation, Inc.,  |
# | 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.              |
# +--------------------------------------------------------------------------+

from endian.core.i18n import _
from endian.emi import widgets
from endian.emi.entities.fieldset import range_options

__all__ = [
    "ProviderAuthTestSettings",
    "ScopeAuthTestSettings"
]

class ProviderAuthTestSettings(widgets.SettingsEditor):
    save_text = _('Test')

    children = widgets.FieldsGroup(
        fields=[
            widgets.TextField('username', label_text=_('Username')),
            widgets.PasswordField('password', label_text=_('Password')),
            widgets.SingleSelectField('provider', label_text=_('Provider'),
                options=range_options(info=dict(
                    target="authentication_frontend:Provider",
                    target_key="name", target_label="name"
                ))
            )
        ]
    )

    def adapt_value(self, value):
        value["ACTION"] = "test"
        value["CONTROLLERNAME"] = "providertest"
        return value

class ScopeAuthTestSettings(widgets.SettingsEditor):
    save_text = _('Test')

    children = widgets.FieldsGroup(
        fields=[
            widgets.TextField('username', label_text=_('Username')),
            widgets.PasswordField('password', label_text=_('Password')),
            widgets.SingleSelectField('scope', label_text=_('Scope'),
                options=range_options(info=dict(
                    target="authentication_frontend:Scope",
                    target_key="name", target_label="name"
                ))
            )
        ]
    )

    def adapt_value(self, value):
        value["ACTION"] = "test"
        value["CONTROLLERNAME"] = "scopetest"
        return value

