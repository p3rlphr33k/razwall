#!/usr/bin/env python  
# encoding: utf-8
#
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2005-2011 Endian                                           |
# |         Endian GmbH/Srl                                                  |
# |         Bergweg 41 Via Monte                                             |
# |         39057 Eppan/Appiano                                              |
# |         ITALIEN/ITALIA                                                   |
# |         info@endian.com                                                  |
# |                                                                          |
# | emi is free software: you can redistribute it and/or modify it under     |
# | the terms of GNU General Public License (GPL) version 2.0                |
# | when released with the Community edition                                 |
# | or the GNU Lesser General Public License (LGPL) version 2.1              |
# | when released with the Enterprise edition.                               |
# |                                                                          |
# | emi is distributed in the hope that it will be useful,                   |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the             |
# | GNU General Public License for more details or the                       |
# | GNU Lesser General Public License for more details.                      |
# |                                                                          |
# | You should have received a copy of the license along with emi.           |
# | If not, see <http://www.gnu.org/licenses/>.                              |
# +--------------------------------------------------------------------------+
#

from tw.forms import InputField
from tw.api import\
    Link,\
    CSSLink,\
    JSLink

import endian.core.i18n
from endian.emi.widgets.static import\
    jquery_js,\
    logger_js
from endian.data.container.settings import SettingsFile

__all__ = ["NetworkSelector"]

class NetworkSelector(InputField):
    template = "endian.emi.templates.network_selector"
    engine_name = "mako"
    css_classes = ["network_selector"]
    
    css = [
        CSSLink(link='/toscawidgets/resources/endian.emi/static/css/network_selector.css')
    ]
    
    javascript = [JSLink(link='/toscawidgets/resources/endian.emi/static/js/network_selector.js',
                         javascript=[jquery_js,
                                     logger_js])
                  ]
    type = "hidden"
    
    #config
    background_width = 100#in px
    background_height = 100# in px
    # background_width and background_height of the background image
    background_image = None
    interface_width = 10#in percentage 0-100
    interface_height = 10#in percentage 0-100
    interface_image = "/toscawidgets/resources/endian.emi/static/images/network_selector_interface.png"
    interfaces = []
    """
    list of tupls with id and position of the ethernet interfaces as id,x,y tuple
    values in percentage(int from 0 to 100) from the higher,
    left corner of the background image

    interfaces_fct is given, on creation this function will be used to get the interfaces
    """
    zoom_factor = 1.2
    values = [
        {"id":"NONE",
         "color":"black",
         "max_selections":-1,
         "focus_title":_("NONE")},# first one is used as default
        {"id":"LAN",
         "color":"#87b821",
         "max_selections":-1,
         "focus_title":_("LAN")},
        {"id":"DMZ",
         "color":"#ffb320",
         "max_selections":-1,
         "focus_title":_("DMZ")},
        {"id":"WIFI",
         "color":"#2369ff",
         "max_selections":-1,
         "focus_title":_("WIFI")},
        {"id":"WAN",
         "color":"#ff1f20",
         "max_selections":-1,
         "focus_title":_("WAN")}
        ]
    
    
    params = ["background_width",
              "background_height",
              "background_image",
              "interface_width",
              "interface_height",
              "interface_image",
              "interfaces",
              "zoom_factor",
              "values"]
    
    def __init__(self,
                 interfaces=None,
                 background_image=None,
                 background_width=None,
                 background_height=None,
                 zoom_factor=None,
                 interface_image=None,
                 interface_height=None,
                 interface_width=None,
                 values=None,
                 settings_file=None,
                 **params):
        if interfaces is not None:
            self.interfaces = interfaces
        if background_image is not None:
            self.background_image = background_image
        if background_width is not None: 
            self.background_width = background_width
        if background_height is not None:
            self.background_height = background_height
        if zoom_factor is not None:
            self.zoom_factor = zoom_factor
        if interface_image is not None:
            self.interface_image = interface_image
        if interface_height is not None:
            self.interface_height = interface_height
        if interface_width is not None:
            self.interface_width = interface_width
        if values is not None:
            self.values = values
        if settings_file is not None:
            self.settings_file = settings_file
        if self.settings_file is not None:
            settings = SettingsFile(self.settings_file)
            for key in settings:
                if key.lower() in self.params:
                    setattr(self, key.lower(), settings[key])
        InputField.__init__(self, **params)

    def _update_params(self, d):
        if hasattr(self, 'interfaces_fct'):
            d["interfaces"] = self.interfaces_fct()
