#!/usr/bin/env python  
# encoding: utf-8
#
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2005-2011 Endian                                           |
# |         Endian GmbH/Srl                                                  |
# |         Bergweg 41 Via Monte                                             |
# |         39057 Eppan/Appiano                                              |
# |         ITALIEN/ITALIA                                                   |
# |         info@endian.com                                                  |
# |                                                                          |
# | emi is free software: you can redistribute it and/or modify it under     |
# | the terms of GNU General Public License (GPL) version 2.0                |
# | when released with the Community edition                                 |
# | or the GNU Lesser General Public License (LGPL) version 2.1              |
# | when released with the Enterprise edition.                               |
# |                                                                          |
# | emi is distributed in the hope that it will be useful,                   |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the             |
# | GNU General Public License for more details or the                       |
# | GNU Lesser General Public License for more details.                      |
# |                                                                          |
# | You should have received a copy of the license along with emi.           |
# | If not, see <http://www.gnu.org/licenses/>.                              |
# +--------------------------------------------------------------------------+
#

"""
menu.py

Created by Raphael Vallazza on 2007-02-13.
Copyright (c) 2007 Endian. All rights reserved.
"""

import os
import time
import simplejson
import glob
import pwd
import grp
import threading

from endian.core.runner import run
from endian.core.logger import *
from endian.core import version
from endian.emi.menu.menu import Menu
from endian.emi.menu.menu_level import MenuLevel


MENUCACHE_D = "/var/cache/menu/"
MENU_TIMEOUT = 3600
    
__all__ = ['CGIMenu']

class CGIMenu(Menu):
    """
        This class loads the menu from a json file generated by a CGI.
        The menudata is shared between all the instances of this class
    """
    
    # Instances attributes
    jsonmenu = None       # json menu passed as argument, used for testing purpose
    
    # Class attributes (shared between all the instances):
    menudata = None       # menu data
    lock = threading.Lock()
    expiry = 0 

    def __init__(self, jsonmenu=None):
        # Retrieve brand settings
        if not Menu.brand_settings:
            self.loadBrandSettings()
        
        if jsonmenu: # json menu passed as argument, used for testing purpose
            CGIMenu.jsonmenu = jsonmenu

        # Load the menu
        if CGIMenu.menudata == None:
            self.load()
        else:
            self.uris_to_items = CGIMenu.uris_to_items 
    
    def getData(self):
        """ Return menu stucture """
        if time.time() >= self.expiry or Menu.is_dirty:
            self.load(reload_only_if_expired=True)
        return CGIMenu.menudata

    def _retrieve_json_from_cgi(self):
        output = run(Menu.menu_json_href).read().strip()
        
        try:
            uid = pwd.getpwnam("nobody").pw_uid
            gid = grp.getgrnam("nogroup").gr_gid
            for file in glob.glob("%s/*.json" % MENUCACHE_D):
                os.chown(file, uid, gid)
        except Exception, e:
            error("Could not change owner of %s/*.json: %s" % (MENUCACHE_D, e))
            
        start = False
        if output.endswith("1"):
            output = output[:-1]
        jsonmenu = ""
        for line in output.split("\n"):
            if not start and not line:
                start = True
            if not start:
                continue
            jsonmenu += "%s\n" % line
        return jsonmenu

    def load(self, reload_only_if_expired=False):
        """ Load menu structure """
        debug("Load menu structure")
        try:
            self.lock.acquire()
            # If reload_only_if_expired is true and the menu is not expired,
            # dont' reload the menu
            if reload_only_if_expired and time.time() < self.expiry and not Menu.is_dirty:
                return False # not reloaded
            
            # Retrieve menu from CGI
            try:
                jsonmenu = CGIMenu.jsonmenu or self._retrieve_json_from_cgi()
                # Parse the json
                json = simplejson.loads(jsonmenu)
                CGIMenu.menudata = MenuLevel(json)
                debug("Menu loaded from %s" % Menu.menu_json_href)
                
                Menu.is_dirty = False
                CGIMenu.expiry = time.time() + MENU_TIMEOUT

                # Create a map for fast lookup of menu items
                self._pupulate_uris_to_items()
                CGIMenu.uris_to_items = self.uris_to_items
                return True # reloaded
            
            except Exception, e:
                error("Could not load menu from %s: %s" % (Menu.menu_json_href, e), exc_info=True)
                return False # not reloaded
        finally:
            self.lock.release()            


if __name__ == '__main__':
    enableLogHandler('console')
    logger.setLevel(logging.DEBUG)
    menu = CGIMenu()
    #print menu.getMenuForURI("/cgi-bin/monit.cgi")
    #menu = CGIMenu()
    #print menu.getMenuForURI("/cgi-bin/monit.cgi")
    #menu = CGIMenu()
    #print menu.getMenuForURI("/cgi-bin/monit.cgi")
    
