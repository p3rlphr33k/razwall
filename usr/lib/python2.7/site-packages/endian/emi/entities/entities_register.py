#
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2005-2011 Endian                                           |
# |         Endian GmbH/Srl                                                  |
# |         Bergweg 41 Via Monte                                             |
# |         39057 Eppan/Appiano                                              |
# |         ITALIEN/ITALIA                                                   |
# |         info@endian.com                                                  |
# |                                                                          |
# | emi is free software: you can redistribute it and/or modify it under     |
# | the terms of GNU General Public License (GPL) version 2.0                |
# | when released with the Community edition                                 |
# | or the GNU Lesser General Public License (LGPL) version 2.1              |
# | when released with the Enterprise edition.                               |
# |                                                                          |
# | emi is distributed in the hope that it will be useful,                   |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the             |
# | GNU General Public License for more details or the                       |
# | GNU Lesser General Public License for more details.                      |
# |                                                                          |
# | You should have received a copy of the license along with emi.           |
# | If not, see <http://www.gnu.org/licenses/>.                              |
# +--------------------------------------------------------------------------+
#

from endian.core.logger import *

# Global entity register - maps entity names to entities
_entities_map = {}
# List of the available prefixes
_prefixes = set()

def register_entity(entry, prefix=None):
    """
    .. autofunction:: register_entity
        Register an entity in the global register
        The optional prefix is used to avoid the names clash
        :param entry: the class to be registered
        :type entry: a sub-class of Entity
        :param prefix: an option prefix added before the name - (e.g. entity = Antivirus, prefix = av, registered name = av:Antivirus)
        :type prefix: string
    """
    global _entities_map
    if prefix:
        _entities_map[prefix + ":" + entry.__name__] = entry
    else:
        _entities_map[entry.__name__] = entry


def lookup_entity_register(entity_name):
    """
    .. autofunction:: lookup_entity_register
        Lookup an entity by its name
        :param entity_name: an entity name
        :type entity_name: string
        :return: Return an Entity or raise KeyError
        :rtype: a sub-class of Entity
    """
    global _entities_map
    if ':' in entity_name:
        prefix = entity_name.split(':')[0]
        if prefix not in _prefixes:
            if prefix == 'core':
                module_name = "endian.emi.entities.core"
            else:
                module_name = "endian.%s.schema" % prefix
            debug("Prefix %s not loaded, trying to load %s", prefix, module_name)
            try:
                __import__(module_name)
            except Exception, ex:
                error("Error importing %s" % module_name, exc_info=True)
    return _entities_map[entity_name]

def register_prefix(prefix):
    """
    ..autofunction:: register_prefix
    Register an entity prefix
    """
    global _prefixes
    if prefix:
        _prefixes.add(prefix)

__all__ = ['register_prefix',
           'register_entity',
           'lookup_entity_register',
          ]
