#!/usr/bin/env python
# -*- coding: utf-8 -*-
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2004-2016 S.p.A. <info@endian.com>                         |
# |         Endian S.p.A.                                                    |
# |         via Pillhof 47                                                   |
# |         39057 Appiano (BZ)                                               |
# |         Italy                                                            |
# |                                                                          |
# | This program is free software; you can redistribute it and/or modify     |
# | it under the terms of the GNU General Public License as published by     |
# | the Free Software Foundation; either version 2 of the License, or        |
# | (at your option) any later version.                                      |
# |                                                                          |
# | This program is distributed in the hope that it will be useful,          |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            |
# | GNU General Public License for more details.                             |
# |                                                                          |
# | You should have received a copy of the GNU General Public License along  |
# | with this program; if not, write to the Free Software Foundation, Inc.,  |
# | 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.              |
# +--------------------------------------------------------------------------+
#

from endian.core import version
import os.path
from endian.dashboard.util import (
    getDeactivation,
    getTrades,
    getUpDates,
    getUpTime,
    getRegistration
)

"""
systeminformationplugin.

Contains the status hooks of the dashboard plugin SystemInformationPlugin.
"""

__all__ = ["updateSystemInformationPlugin"]


KERNEL_UPDATED_FILE = '/var/tmp/oldkernel'


def updateSystemInformationPlugin(**params):
    """
    updateSystemInformationPlugin.

    Returns the data to update the system information plugin.
    :return: The data to update the plugin.
    :rtype: Dict
    """
    ret = {}

    deactivation = getDeactivation()
    if deactivation:
        ret["deactivation"] = deactivation
    if version.is_community():
        ret["appliance"] = "Community"
    else:
        ret["appliance"] = version.get_product().replace(" Appliance", "")
    ret["version"] = version.get_version()
    ret["kernel"] = version.get_kernel_version()
    if ret["kernel"] == "":
        ret["kernel"] = 1
    else:
        ret["kernel_value"] = ret["kernel"]
        ret["kernel"] = 0
    if os.path.isfile(KERNEL_UPDATED_FILE):
        ret["kernel"] = 1
    ret["uptime"] = getUpTime()
    if not version.is_community():
        maintenance, maintenanceDaysLeft,\
            sophos, sophosDaysLeft,\
            commtouch, commtouchDaysLeft,\
            support = getTrades()
        ret["update"] = getUpDates()
        ret["maintenance"] = maintenance
        ret["maintenance_value"] = maintenanceDaysLeft
        if sophos:
            ret["sophos"] = sophos
            ret["sophos_value"] = sophosDaysLeft
        if commtouch:
            ret["commtouch"] = commtouch
            ret["commtouch_value"] = commtouchDaysLeft
        if support and os.path.exists('/var/efw/support/'):
            ret["support_value"] = support
            ret["support"] = 1
        else:
            ret["support"] = 0
    else:
        ret["register"] = getRegistration()

    return ret
