#!/usr/bin/env python
# -*- coding: utf-8 -*-
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2004-2016 S.p.A. <info@endian.com>                         |
# |         Endian S.p.A.                                                    |
# |         via Pillhof 47                                                   |
# |         39057 Appiano (BZ)                                               |
# |         Italy                                                            |
# |                                                                          |
# | This program is free software; you can redistribute it and/or modify     |
# | it under the terms of the GNU General Public License as published by     |
# | the Free Software Foundation; either version 2 of the License, or        |
# | (at your option) any later version.                                      |
# |                                                                          |
# | This program is distributed in the hope that it will be useful,          |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            |
# | GNU General Public License for more details.                             |
# |                                                                          |
# | You should have received a copy of the GNU General Public License along  |
# | with this program; if not, write to the Free Software Foundation, Inc.,  |
# | 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.              |
# +--------------------------------------------------------------------------+

import os
from endian.job.commons import remove_glob, touch, chgrp, remove_from_path, create_empty_file, CONFIG_ROOT
from endian.job.job import Job, action

class CleanupJob(Job):

    @action(name="start",
            on="startup",
            depends=["save_defaults"],
            options={"debug": (bool, "Be more verbose.")}
            )
    def start(self, options):
        Job.start(self, options)
        try:
            self.info("Clearing old files")

            remove_from_path('/var/run', exclude=["utmp", "jobsengine.sock", "jobsengine.pid", "jobsengine.lock"],
                             remove_directories=False)
            remove_from_path('/var/lock', remove_directories=False)

            remove_glob('%s/dhcpc/*.pid' % CONFIG_ROOT)
            remove_glob('%s/dhcpc/*.cache' % CONFIG_ROOT)
            remove_glob('%s/dhcpc/*.info' % CONFIG_ROOT)
            remove_glob('%s/red/active' % CONFIG_ROOT)
            remove_glob('%s/red/eciadsl-synch-done' % CONFIG_ROOT)

            remove_glob('%s/access/connection' % CONFIG_ROOT)

            # OpenVPN temporary information.
            remove_glob('/var/cache/var.efw.vpn.servers')

            # Clean old configuration for uplinks.
            remove_glob('%s/uplinks/*/data.old' % CONFIG_ROOT)

            # Clean OpenVPN temporary data.
            remove_glob('/var/cache/var.efw.vpn.servers')

            # Cleaning up wtmp/utmp files
            remove_glob('/var/log/wtmp')
            create_empty_file('/var/run/utmp')
            touch('/var/log/wtmp')
            chgrp('/var/run/utmp', 'utmp')
            chgrp('/var/log/wtmp', 'utmp')
            os.chmod('/var/run/utmp', 0664)
            os.chmod('/var/log/wtmp', 0664)

            remove_from_path('/tmp', remove_directories=True)
            remove_from_path('/var/tmp', remove_directories=True)

            # Cleaning lockfiles
            remove_from_path('/var/lock', remove_directories=False)
            remove_glob('/var/lib/pgsql/data/postmaster.pid')

            # Cleaning firewall
            remove_glob('/etc/firewall/dnat/iptablesdnat')
            remove_glob('/etc/firewall/incoming/iptablesincoming')
            remove_glob('/etc/firewall/outgoingfw/iptablesoutgoingfw')
            remove_glob('/etc/firewall/proxies/iptablesproxies')
            remove_glob('/etc/firewall/snat/iptablessnat')
            remove_glob('/etc/firewall/vpnfw/iptablesvpnfw')
            remove_glob('/etc/firewall/vpnfw/iptablesvpnfwprep')
            remove_glob('/etc/firewall/inputfw/iptablesinputfw')
            remove_glob('/etc/firewall/zonefw/iptableszonefw')
            remove_glob('/etc/firewall/zonefw/ebtableszonefw')

            # Cleaning rt_tables
            remove_glob('/etc/iproute2/rt_tables')

            # Cleaning up uplinks
            remove_glob('%s/uplinks/*/active' % CONFIG_ROOT)
            remove_glob('%s/uplinks/*/data' % CONFIG_ROOT)

        except Exception, ex:
            self.error(ex)
