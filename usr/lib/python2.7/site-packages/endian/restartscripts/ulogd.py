#!/usr/bin/env python
# -*- coding: utf-8 -*-
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2004-2016 S.p.A. <info@endian.com>                         |
# |         Endian S.p.A.                                                    |
# |         via Pillhof 47                                                   |
# |         39057 Appiano (BZ)                                               |
# |         Italy                                                            |
# |                                                                          |
# | This program is free software; you can redistribute it and/or modify     |
# | it under the terms of the GNU General Public License as published by     |
# | the Free Software Foundation; either version 2 of the License, or        |
# | (at your option) any later version.                                      |
# |                                                                          |
# | This program is distributed in the hope that it will be useful,          |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            |
# | GNU General Public License for more details.                             |
# |                                                                          |
# | You should have received a copy of the GNU General Public License along  |
# | with this program; if not, write to the Free Software Foundation, Inc.,  |
# | 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.              |
# +--------------------------------------------------------------------------+

from endian.job.job import Job, action
from endian.data.ds import DataSource
from endian.job.commons import (
    monit,
    write_config,
    DONT_CHANGE_STATUS
)
from endian.job.engine_control import EXIT_STATUS_START, EXIT_STATUS_STOP


LOGROTATE = "/etc/logrotate.d/ulogd"


class UlogdJob(Job):

    config_values = None

    # ulogd is the userspace logging daemon for netfilter/iptables

    def save_config(self):
        if self.config_values is None:
            self.load_config()
        write_config(LOGROTATE + ".tmpl", LOGROTATE, self.config_values)

    def load_config(self):
        self.config_values = {}
        self.config_values['DS'] = DataSource()

    @action(name="restart",
            exit_status="start",
            depends=["monit=start", "network=start"],
            options={"debug": (bool, "Be more verbose.")}
            )
    def restart(self, options):
        Job.restart(self, options)
        self.save_config()
        self.info("Starting ulogd")
        monit("restart ulogd", logger=self.logger)
        return EXIT_STATUS_START

    @action(name="stop",
            options={"debug": (bool, "Be more verbose.")}
            )
    def stop(self, options):
        Job.stop(self, options)
        if options.get("onboot"):
            return EXIT_STATUS_STOP
        self.debug("Stopping ulogd...")
        monit("stop ulogd", logger=self.logger)
        return EXIT_STATUS_STOP

    @action(name="start",
            on="startup",
            depends=["monit=start", "network=start"],
            priority=13,
            options={"debug": (bool, "Be more verbose.")}
            )
    def start(self, options):
        Job.start(self, options)
        return self.restart(options)

    @action(name="updatewizard",
            on="updatewizard",
            priority=50,
            exit_status=DONT_CHANGE_STATUS,
            options={"debug": (bool, "Be more verbose.")}
            )
    def updatewizard(self, options):
        self.info("Updatewizard ulogd")
        return self.restart(options)
