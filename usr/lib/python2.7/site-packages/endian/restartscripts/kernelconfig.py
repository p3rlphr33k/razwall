#!/usr/bin/env python
# -*- coding: utf-8 -*-
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2004-2016 S.p.A. <info@endian.com>                         |
# |         Endian S.p.A.                                                    |
# |         via Pillhof 47                                                   |
# |         39057 Appiano (BZ)                                               |
# |         Italy                                                            |
# |                                                                          |
# | This program is free software; you can redistribute it and/or modify     |
# | it under the terms of the GNU General Public License as published by     |
# | the Free Software Foundation; either version 2 of the License, or        |
# | (at your option) any later version.                                      |
# |                                                                          |
# | This program is distributed in the hope that it will be useful,          |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            |
# | GNU General Public License for more details.                             |
# |                                                                          |
# | You should have received a copy of the GNU General Public License along  |
# | with this program; if not, write to the Free Software Foundation, Inc.,  |
# | 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.              |
# +--------------------------------------------------------------------------+

from endian.job.commons import Job, action, file_exists
from endian.job.generic.servicejob import ServiceJob
from endian.data.methods import register_lookup
from endian.data.drivers.settingsfile import _dirGetSettingsInexistentOk

register_lookup(1000, 'get', _dirGetSettingsInexistentOk, 'leaf', 'mapping')

class KernelConfigJob(ServiceJob, Job):
    settingsName = 'kernel'
    hasService = False
    configFiles = []
    enabledkeys = ['KERNELCONFIG_ENABLED']

    def restart_hook(self, options):
        ds = self.config_values['DS']
        s = self.config_values['S']
        for k,v in ds.kernel.mapping.iteritems():
            if k not in s:
                continue
            value = s[k]
            if value == '':
                continue
            if not file_exists(v):
                self.warning("Kernel parameter file '%s' does not exist. Skip!", v)
                continue
            self.info("Set kernel parameter '%s' to '%s'", v, value)
            try:
                f = open(v, "w+")
                f.write(value)
            finally:
                f.close()

    @action(name="start",
            on="startup",
            depends=["network", "monit"],
            priority=10,
            options={"debug":(bool,"Be more verbose.")}
            )
    def start(self, options):
        return ServiceJob.start(self, options)

    @action(name="restart",
            exit_status="start",
            options={"debug":(bool,"Be more verbose."),
                     "force":(bool,"Forces restart.")}
            )
    def restart(self, options):
        return ServiceJob.restart(self, options)
