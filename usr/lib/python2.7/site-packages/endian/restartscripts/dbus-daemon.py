#!/usr/bin/env python
# -*- coding: utf-8 -*-
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2004-2016 S.p.A. <info@endian.com>                         |
# |         Endian S.p.A.                                                    |
# |         via Pillhof 47                                                   |
# |         39057 Appiano (BZ)                                               |
# |         Italy                                                            |
# |                                                                          |
# | This program is free software; you can redistribute it and/or modify     |
# | it under the terms of the GNU General Public License as published by     |
# | the Free Software Foundation; either version 2 of the License, or        |
# | (at your option) any later version.                                      |
# |                                                                          |
# | This program is distributed in the hope that it will be useful,          |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            |
# | GNU General Public License for more details.                             |
# |                                                                          |
# | You should have received a copy of the GNU General Public License along  |
# | with this program; if not, write to the Free Software Foundation, Inc.,  |
# | 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.              |
# +--------------------------------------------------------------------------+

from endian.job.commons import (
    DONT_CHANGE_STATUS,
    EXIT_STATUS_START,
    EXIT_STATUS_STOP,
    Job,
    action,
    monit,
    reload_service,
)


class DbusDaemon(Job):
    initscript = "dbus-1"

    @action(name="start",
            on="startup",
            depends="monit=start",
            priority=99,
            options={"debug": (bool, "Be more verbose.")}
            )
    def start(self, options):
        Job.start(self, options)
        return self.restart(options)

    @action(name="restart",
            exit_status="start",
            depends="monit=start",
            options={"debug": (bool, "Be more verbose.")}
            )
    def restart(self, options):
        Job.restart(self, options)
        self.info("Restarting dbus-daemon")
        reload_service("dbus-daemon",
                       logger=self.logger,
                       changed=False,
                       can_reload=False)
        return EXIT_STATUS_START

    @action(name="stop",
            options={"debug": (bool, "Be more verbose.")}
            )
    def stop(self, options):
        Job.stop(self, options)
        if options.get("onboot"):
            return EXIT_STATUS_STOP
        self.info("Stopping dbus-daemon")
        monit("stop dbus-daemon", logger=self.logger)
        return EXIT_STATUS_STOP

#    @action(name="updatewizard",
#            on="updatewizard",
#            priority=50,
#            exit_status=DONT_CHANGE_STATUS,
#            options={"debug": (bool, "Be more verbose.")}
#            )
#    def updatewizard(self, options):
#        self.info("Updatewizard dbus-daemon")
#        return self.restart(options)

    @action(name="first_startup",
            on="first_startup",
            exit_status="start",
            priority=2,
            depends=["monit=start"],
            options={"debug": (bool, "Be more verbose.")}
            )
    def first_startup(self, options):
        return self.start(options)
