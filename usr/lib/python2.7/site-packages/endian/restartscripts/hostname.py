#!/usr/bin/env python
# -*- coding: utf-8 -*-
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2004-2016 S.p.A. <info@endian.com>                         |
# |         Endian S.p.A.                                                    |
# |         via Pillhof 47                                                   |
# |         39057 Appiano (BZ)                                               |
# |         Italy                                                            |
# |                                                                          |
# | This program is free software; you can redistribute it and/or modify     |
# | it under the terms of the GNU General Public License as published by     |
# | the Free Software Foundation; either version 2 of the License, or        |
# | (at your option) any later version.                                      |
# |                                                                          |
# | This program is distributed in the hope that it will be useful,          |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            |
# | GNU General Public License for more details.                             |
# |                                                                          |
# | You should have received a copy of the GNU General Public License along  |
# | with this program; if not, write to the Free Software Foundation, Inc.,  |
# | 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.              |
# +--------------------------------------------------------------------------+

from endian.data import DataSource
from endian.job.commons import Job, action, file_exists, write_file_content, run

LOCALHOST_CONFIGURATION_LINE = "127.0.0.1   localhost.localhost localhost\n"

class HostnameJob(Job):

    def fix_hosts(self):
        if not file_exists("/etc/hosts"):
            write_file_content("/etc/hosts", LOCALHOST_CONFIGURATION_LINE, logger=self.logger)
        else:
            try:
                try:
                    f = open("/etc/hosts", 'r+')
                    localhost_is_present = False
                    for line in f:
                        if 'localhost' in line.split():
                            localhost_is_present = True
                            break
                    if not localhost_is_present:
                        f.write(LOCALHOST_CONFIGURATION_LINE)
                finally:
                    f.close()
            except Exception:
                self.logger.error("Traceback", exc_info=True)

    @action(name="start",
            on="startup",
            depends="save_defaults",
            options={"debug":(bool,"Be more verbose.")}
            )
    def start(self, options):
        Job.start(self, options)
        self.fix_hosts()

        try:
            settings = DataSource("host").settings
            hostname = settings.get("HOSTNAME", "")
            domain_name = settings.get("DOMAINNAME", "")
            self.info("Setting hostname")
            run("hostname %s" % (domain_name and "%s.%s" % (hostname, domain_name) or hostname), suppress_output=True)
        except Exception, ex:
            self.error(ex)

    @action(name="updatewizard",
            on="updatewizard",
            priority=9,
            exit_status="start",
            options={"debug":(bool,"Be more verbose.")}
            )
    def updatewizard(self, options):
        self.info("Updatewizard hostname")
        return self.start(options)

