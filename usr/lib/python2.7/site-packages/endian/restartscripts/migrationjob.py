#!/usr/bin/env python  
# encoding: utf-8
#
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2005-2012 Endian                                           |
# |         Endian GmbH/Srl                                                  |
# |         Bergweg 41 Via Monte                                             |
# |         39057 Eppan/Appiano                                              |
# |         ITALIEN/ITALIA                                                   |
# |         info@endian.com                                                  |
# |                                                                          |
# | emi is free software: you can redistribute it and/or modify it under     |
# | the terms of GNU General Public License (GPL) version 2.0                |
# | when released with the Community edition                                 |
# | or the GNU Lesser General Public License (LGPL) version 2.1              |
# | when released with the Enterprise edition.                               |
# |                                                                          |
# | emi is distributed in the hope that it will be useful,                   |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the             |
# | GNU General Public License for more details or the                       |
# | GNU Lesser General Public License for more details.                      |
# |                                                                          |
# | You should have received a copy of the license along with emi.           |
# | If not, see <http://www.gnu.org/licenses/>.                              |
# +--------------------------------------------------------------------------+
#

from endian.job.commons import *

class MigrationJob(Job):

    name = "migration"

    @function(name="migrate",
              options={"pkg":        (unicode, "Call all migration modules of that pakage"),
                       "epoch":      (unicode, "Migrate to provided epoch"),
                       "version":    (unicode, "Migrate to provided version"),
                       "release":    (unicode, "Migrate to provided release")})
    def migrate(self, options):
        """ 
        .. autofunction :: migrate
        
            Starts configuration migration
        
            Searches all migration modules for package '''pkg''', or all
            packages, if '''pkg''' is omitted.
        
            If '''pkg''' is supplied, versioning information may also be
            provided, in order to migrate to a specific version.
        
            Calls all migration modules of those versions between that 
            one of the last update and the current status within the rpm db.
        """
        from endian.migration.migration import migrate
        return migrate(pkg=options.get("pkg", None),
                       epoch=options.get("epoch", None),
                       version=options.get("version", None),
                       release=options.get("release", None),
                       logger=self.logger)

    @function(name="update")
    def update(self, options):
        """ 
        .. autofunction :: run_parts
            Updates list of the version of current configuration files
    
            The list of teh version of current configuration files is
            basically a list of rpm package names with their version, 
            release and epoch. In order to allow to understand which
            configuration file must be migrated this list should reflect
            always the versions the corresponding settings files have at
            the moment.
        
            This function should be called before upgrades, in order to
            understand which packages need migration during upgrade process.
        """
        from endian.migration.migration import update
        return update(logger=self.logger)
