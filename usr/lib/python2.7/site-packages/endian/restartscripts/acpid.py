#
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2005-2010 Endian                                           |
# |         Endian GmbH/Srl                                                  |
# |         Bergweg 41 Via Monte                                             |
# |         39057 Eppan/Appiano                                              |
# |         ITALIEN/ITALIA                                                   |
# |         info@endian.com                                                  |
# |                                                                          |
# | endian-core is free software: you can redistribute it and/or modify      |
# | it under the terms of the GNU Lesser General Public License as published |
# | by the Free Software Foundation, either version 2.1 of the License, or   |
# | (at your option) any later version.                                      |
# |                                                                          |
# | endian-core is distributed in the hope that it will be useful,           |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            |
# | GNU Lesser General Public License for more details.                      |
# |                                                                          |
# | You should have received a copy of the GNU Lesser General Public License |
# | along with endian-core.  If not, see <http://www.gnu.org/licenses/>.     |
# +--------------------------------------------------------------------------+
#

from endian.job.commons import *

class AcpidJob(Job):

    @action(name="start",
            on="startup",
            depends="monit=start",
            priority=99,
            options={"debug":(bool,"Be more verbose.")}
            )
    def start(self, options):
        Job.start(self, options)
        options['force'] = True
        return self.restart(options)

    @action(name="restart",
            exit_status="start",
            depends="monit=start",
            options={"debug":(bool,"Be more verbose.")}
            )
    def restart(self, options):
        Job.restart(self, options)
        self.info("Restarting acpid")
        reload_service("acpid",
                       logger=self.logger,
                       changed=True,
                       can_reload=False)
        return EXIT_STATUS_START

    @action(name="stop",
            options={"debug":(bool,"Be more verbose.")}
            )
    def stop(self, options):
        Job.stop(self, options)
        if options.get("onboot"):
            return EXIT_STATUS_STOP
        self.info("Stopping acpid")
        monit("stop acpid", logger=self.logger)
        return EXIT_STATUS_STOP

    @action(name="updatewizard",
            on="updatewizard",
            priority=50,
            exit_status=DONT_CHANGE_STATUS,
            options={"debug":(bool,"Be more verbose.")}
            )
    def updatewizard(self, options):
        self.info("Updatewizard acpid")
        return self.restart(options)
