#!/usr/bin/env python  
# encoding: utf-8
#
# +--------------------------------------------------------------------------+
# | Endian Firewall                                                          |
# +--------------------------------------------------------------------------+
# | Copyright (c) 2005-2011 Endian                                           |
# |         Endian GmbH/Srl                                                  |
# |         Bergweg 41 Via Monte                                             |
# |         39057 Eppan/Appiano                                              |
# |         ITALIEN/ITALIA                                                   |
# |         info@endian.com                                                  |
# |                                                                          |
# | emi is free software: you can redistribute it and/or modify it under     |
# | the terms of GNU General Public License (GPL) version 2.0                |
# | when released with the Community edition                                 |
# | or the GNU Lesser General Public License (LGPL) version 2.1              |
# | when released with the Enterprise edition.                               |
# |                                                                          |
# | emi is distributed in the hope that it will be useful,                   |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of           |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the             |
# | GNU General Public License for more details or the                       |
# | GNU Lesser General Public License for more details.                      |
# |                                                                          |
# | You should have received a copy of the license along with emi.           |
# | If not, see <http://www.gnu.org/licenses/>.                              |
# +--------------------------------------------------------------------------+
#

from endian.job.commons import *

LOGROTATE = "/etc/logrotate.d/emi" 

class EmiJob(Job):

    config_values = None
    name = "emi"

    def save_config(self):
        if self.config_values == None:
            self.load_config()
        write_config(LOGROTATE + ".tmpl",
                     LOGROTATE,
                     self.config_values)

    def load_config(self):
        self.config_values = {}
        self.config_values['DS'] = DataSource()

    @action(name="start",
            on="startup",
            depends=["monit=start"],
            priority=10,
            options={"debug":(bool,"Be more verbose.")}
            )
    def start(self, options):
        Job.start(self, options)
        options['force'] = True
        return self.restart(options)

    @action(name="restart", 
            depends=["monit=start"],
            exit_status="start",
            options={"debug":(bool,"Be more verbose.")}
            )
    def restart(self, options):
        Job.restart(self, options)
        changed = self.save_config()
        self.info("Restarting Emi")

        if options.get('force', False):
            changed = True
        reload_service("emi",
                       logger=self.logger,
                       changed=changed,
                       can_reload=False)
        return EXIT_STATUS_START

    @action(name="stop",
            options={"debug":(bool,"Be more verbose.")}
            )
    def stop(self, options):
        Job.stop(self, options)
        if options.get("onboot"):
            return EXIT_STATUS_STOP
        self.info("Stopping Emi")
        monit("stop emi", logger=self.logger)
        return EXIT_STATUS_STOP

    @function(name="expire_menu_cache")
    def expire_menu_cache(self, options):
        """ Expire the menu cache """
        remove_glob("/var/cache/menu/*.json")
        return "OK"

    @function(name="reload")
    def reload(self, options):
        """ Reload EMI """
        exit_code = run("/etc/init.d/emi reload")
        if exit_code != 0:
            raise Exception("Error reloading EMI")
        return "OK"
