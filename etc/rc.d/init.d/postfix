#!/bin/bash
#
# postfix      Postfix Mail Transfer Agent
#
# chkconfig: 2345 80 30
# description: Postfix is a Mail Transport Agent, which is the program \
#              that moves mail from one machine to another.
# processname: master
# pidfile: /var/spool/postfix/pid/master.pid
# config: /etc/postfix/main.cf
# config: /etc/postfix/master.cf
#
# Based on startup script from Simon J Mudd <sjmudd@pobox.com>
# 25/02/99: Mostly s/sendmail/postfix/g by John A. Martin <jam@jamux.com>
# 23/11/00: Changes & suggestions by Ajay Ramaswamy <ajayr@bigfoot.com>
# 20/01/01: Changes to fall in line with RedHat 7.0 style
# 23/02/01: Fix a few untidy problems with help from Daniel Roesen.

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
#. /etc/sysconfig/network

# Check that networking is up.
#[ ${NETWORKING} = "no" ] && exit 0

[ -x /usr/sbin/postfix ] || exit 0
[ -d /etc/postfix ] || exit 0
[ -d /var/spool/postfix ] || exit 0

RETVAL=0

start() {
	# Start daemons.
	echo -n "Starting postfix: "
	alias_database=$(postconf -h alias_database 2>/dev/null)
	RETVAL=1
	[ -z "$alias_database" ] && {
	    failure "determination of alias_database"
	    echo
	    return 0	    
	}
	/usr/sbin/postalias ${alias_database//,} 2>/dev/null
	RETVAL=$?
	[ $RETVAL -ne 0 ] && {
	    failure "postalias $alias_database"
	    echo
	    return 0	    
	}
	for buildfile in /etc/postfix/*.build; do
	    sh -x $buildfile
	done

	/usr/sbin/postfix start 2>/dev/null 1>&2 && success || failure
	RETVAL=$?
	[ $RETVAL -eq 0 ] && touch /var/lock/subsys/postfix
        echo
	return $RETVAL
}

stop() {
        # Stop daemons.
	echo -n "Shutting down postfix: "
	/usr/sbin/postfix stop 2>/dev/null 1>&2 && success || failure
	RETVAL=$?
	[ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/postfix
	echo
	return $RETVAL
}

reload() {
	echo -n "Reloading postfix: "
	/usr/sbin/postfix reload 2>/dev/null 1>&2 && success || failure
	RETVAL=$?
	echo
	return $RETVAL
}

abort() {
	/usr/sbin/postfix abort 2>/dev/null 1>&2 && success || failure
	return $?
}

flush() {
	/usr/sbin/postfix flush 2>/dev/null 1>&2 && success || failure
	return $?
}

check() {
	/usr/sbin/postfix check 2>/dev/null 1>&2 && success || failure
	return $?
}

restart() {
	stop
	start
}

# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  restart)
	stop
	start
	;;
  reload)
	reload
	;;
  abort)
	abort
	;;
  flush)
	flush
	;;
  check)
	check
	;;
  status)
  	status master
	;;
  condstop)
	[ -f /var/lock/subsys/postfix ] && stop || :
	;;
  condrestart)
	[ -f /var/lock/subsys/postfix ] && restart || :
	;;
  *)
	echo "Usage: postfix {start|stop|restart|reload|abort|flush|check|status|condrestart|condstop}"
	exit 1
esac

exit $?
